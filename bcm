#!/bin/bash

# note the absense of -u allows you to use environment variables from the parent shell
set -Eeox pipefail
cd "$(dirname "$0")"

# if this is 1, then we assume we are running BCM WITHOUT the front-end (e.g., dockerd on bare metal)
IS_FRONTEND=1
BCM_HELP_FLAG=0
REBUILD_IMAGES=0

for i in "$@"; do
    case $i in
        --help)
            BCM_HELP_FLAG=1
        ;;
        --backend-only)
            IS_FRONTEND=0
        ;;
        --rebuild)
            REBUILD_IMAGES=1
        ;;
        *)
            # unknown option
        ;;
    esac
done

if [[ $BCM_HELP_FLAG == 1 ]]; then
    cat ./commands/help.txt
    exit
fi

BCM_DEBUG=${BCM_DEBUG:-1}
export BCM_DEBUG="$BCM_DEBUG"
export REBUILD_IMAGES="$REBUILD_IMAGES"


BCM_SSH_HOSTNAME=${BCM_SSH_HOSTNAME:-"localhost"}
if [[ ! -z $BCM_SSH_HOSTNAME ]]; then
    BCM_SSH_HOSTNAME="$BCM_SSH_HOSTNAME"
fi
export BCM_SSH_HOSTNAME="$BCM_SSH_HOSTNAME"

BCM_SSH_USERNAME=${BCM_SSH_USERNAME:-"$(whoami)"}
if [[ ! -z $BCM_SSH_USERNAME ]]; then
    BCM_SSH_USERNAME="$BCM_SSH_USERNAME"
fi
export BCM_SSH_USERNAME="$BCM_SSH_USERNAME"

BCM_ACTIVE_CHAIN=${BCM_ACTIVE_CHAIN:-"testnet"}
if [[ ! -z $BCM_ACTIVE_CHAIN ]]; then
    BCM_ACTIVE_CHAIN="$BCM_ACTIVE_CHAIN"
fi
export BCM_ACTIVE_CHAIN="$BCM_ACTIVE_CHAIN"

GNUPGHOME=${GNUPGHOME:-"$HOME/.gnupg"}
if [[ ! -z $GNUPGHOME ]]; then
    GNUPGHOME="$GNUPGHOME"
fi
export GNUPGHOME="$GNUPGHOME"

BCM_DATACENTER=${BCM_DATACENTER:-"default"}
if [[ ! -z $BCM_DATACENTER ]]; then
    BCM_DATACENTER="$BCM_DATACENTER"
fi
export BCM_DATACENTER="$BCM_DATACENTER"


export BCM_MAJOR_VERSION="0"
export BCM_MINOR_VERSION="0"
export BCM_PATCH_VERSION="1"
export BCM_VERSION_FLAG="beta"
export BCM_VERSION="v$BCM_MAJOR_VERSION.$BCM_MINOR_VERSION.$BCM_PATCH_VERSION-$BCM_VERSION_FLAG"

BCM_GIT_DIR="$(pwd)"
export BCM_GIT_DIR="$BCM_GIT_DIR"
export BCM_LXD_OPS="$BCM_GIT_DIR/project/shared"

# todo; convert this to a temp encrypted ramdisk that exists for the duration of each bcm call.
BCM_HELP_FLAG=0

export BCM_PROJECT="bcm-$BCM_DATACENTER""_""$BCM_VERSION"

export BCM_HELP_FLAG="$BCM_HELP_FLAG"
export IS_FRONTEND="$IS_FRONTEND"


# switch to 'master' for formal versions.
export BCM_DEFAULT_GIT_BRANCH="dev"
export BCM_SSH_DIR="$HOME/.ssh" && mkdir -p "$BCM_SSH_DIR"
export BCM_STACKS_DIR="$BCM_GIT_DIR/stacks"
export BASE_DOCKER_IMAGE="ubuntu:latest"
export BCM_TMP_DIR="/tmp/bcm" && mkdir -p "$BCM_TMP_DIR"

PASSWORD_STORE_DIR="$HOME/.password_store" && mkdir -p "$PASSWORD_STORE_DIR"

export PASSWORD_STORE_DIR="$PASSWORD_STORE_DIR"
export LXC_BCM_BASE_IMAGE_NAME="bcm-template"

BCM_MANAGER_HOST_NAME="bcm-manager-01"
BCM_KAFKA_HOST_NAME="bcm-kafka-01"
BCM_UNDERLAY_HOST_NAME="bcm-underlay-01"
BCM_BITCOIN_HOST_NAME="bcm-bitcoin-$BCM_ACTIVE_CHAIN-01"

export BCM_MANAGER_HOST_NAME="$BCM_MANAGER_HOST_NAME"
export BCM_KAFKA_HOST_NAME="$BCM_KAFKA_HOST_NAME"
export BCM_UNDERLAY_HOST_NAME="$BCM_UNDERLAY_HOST_NAME"
export BCM_BITCOIN_HOST_NAME="$BCM_BITCOIN_HOST_NAME"
export BCM_GITHUB_REPO_URL="https://github.com/BitcoinCacheMachine/BitcoinCacheMachine"

export BCM_REGISTRY_MIRROR_PORT="5000"
export BCM_PRIVATE_REGISTRY_PORT="5010"
export BCM_PRIVATE_REGISTRY="$BCM_MANAGER_HOST_NAME:$BCM_PRIVATE_REGISTRY_PORT"
export BCM_KNOWN_HOSTS_FILE="$BCM_SSH_DIR/known_hosts"
export BCM_BACKUP_DIR="$HOME/.bcm_backups" && mkdir -p "$BCM_BACKUP_DIR"

export BCM_DOCKER_IMAGE_CACHE_FQDN="registry-1.docker.io"
export BCM_LXD_IMAGE_CACHE="images.linuxcontainers.org"

OLD_GNUPGHOME="$GNUPGHOME"
export GNUPGHOME="$GNUPGHOME/trezor"
DEFAULT_KEY_ID=
if [ -d "$GNUPGHOME" ]; then
    DEFAULT_KEY_ID=$(gpg --no-permission-warning --list-keys --keyid-format LONG | grep nistp256 | grep pub | sed 's/^[^/]*:/:/')
    DEFAULT_KEY_ID="${DEFAULT_KEY_ID#*/}"
    DEFAULT_KEY_ID="$(echo "$DEFAULT_KEY_ID" | awk '{print $1}')"
fi

export DEFAULT_KEY_ID="$DEFAULT_KEY_ID"
export GNUPGHOME="$OLD_GNUPGHOME"

# Install docker if we're running this command on a front-end
if [[ $IS_FRONTEND = 1 ]]; then
    ./commands/cli_entrypoint.sh "$@"
fi
